spring:
  application:
    name: MarineLeisure

  config:
    activate:
      on-profile: prod
  sql:
    init:
      mode: always
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://db:3306/marine
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    properties:
      hibernate:
        format_sql: true
        show_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
    defer-datasource-initialization: true

  ai:
    openai:
      api-key: ${OPENAI_KEY}
      chat:
        model: gpt-3.5-turbo

  flyway:
    enabled: false
    baseline-on-migrate: true
  #    locations: classpath:db/migration

api:
  # 국립해양조사원(Korea Hydrographic and Oceanographic Agency, KHOA)
  khoa:
    base-url: https://apis.data.go.kr/1192136
    service-key: ${DATAPORTAL_KEY}
    type: json
    path:
      fishing: /fcstFishing/GetFcstFishingApiService
      mudflat: /fcstMudflat/GetFcstMudflatApiService
      diving: /fcstSkinScuba/GetFcstSkinScubaApiService
      surfing: /fcstSurfing/GetFcstSurfingApiService
  openmeteo:
    base-url: https://api.open-meteo.com/v1/forecast
    timezone: Asia/Seoul
badanuri:
  api:
    key: ${BADANURI_KEY}
kakao:
  login:
    api_key: ${KAKAO_API_KEY}
    client_secret: ${KAKAO_CLIENT_SECRET}
    admin_key: ${KAKAO_ADMIN_KEY}
    redirect_uri: ${KAKAO_REDIRECT_URI}

    uri:
      code: /oauth/authorize
      base: https://kauth.kakao.com
  map:
    uri: https://dapi.kakao.com/v2/local/geo/coord2regioncode
jwt:
  secret: ${JWT_SECRET}
  access-token-validity-in-seconds: 3600
  refresh-token-validity-in-seconds: 86400  # 24시간
  use-cookie: false # 개발 환경에서. 클라이언트 개발 완료 후 쿠키 사용 방식으로 변경.